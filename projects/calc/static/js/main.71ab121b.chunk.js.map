{"version":3,"sources":["TestPage.js","serviceWorker.js","Calculator.js","Home.js","NotFound.js","NavBar.js","index.js"],"names":["TestPage","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Calculator","renderCalculator","className","result","length","getExponentText","FormControl","ref","textInput","value","expression","onChange","onExpressionChanged","placeholder","aria-label","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","renderExtraFunctions","Button","onClick","moveCursorLeft","variant","moveCursorRight","clear","delete","bindAppend","renderButtons","undo","redo","matches","start","end","output","i","push","key","f","c","render","append","str","current","focus","insertText","bind","event","target","replace","setState","tryEnumerate","selectionStart","selectionEnd","document","execCommand","mathJsConfig","epsilon","matrix","number","precision","predictable","randomSeed","math","create","all","createRef","exp","iteration","trim","this","compile","evaluate","round","toString","err","numOpenParentheses","numClosedParentheses","parenthesesToAdd","parentheses","Home","props","testVar","setTimeout","NotFound","NavBar","to","routing","exact","path","component","ReactDOM","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.71ab121b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass TestPage extends React.Component {\r\n    render() {\r\n        return <h1>This is a test page</h1>\r\n    }\r\n}\r\n\r\nexport default TestPage;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport 'mathjs';\r\nimport './App.scss';\r\nimport \"./Calculator.scss\";\r\nimport {Accordion, Button, Card, FormControl} from \"react-bootstrap\"\r\nimport {all, create} from \"mathjs\";\r\nimport insertText from 'insert-text-textarea';\r\n\r\nexport class Calculator extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.mathJsConfig = {\r\n            epsilon: 1e-12,\r\n            matrix: 'Matrix',\r\n            number: 'BigNumber',\r\n            precision: 128,\r\n            predictable: false,\r\n            randomSeed: null\r\n        };\r\n        this.math = create(all, this.mathJsConfig);\r\n\r\n        this.state = {\r\n            expression: ' ',\r\n            result: ''\r\n        };\r\n        this.textInput = React.createRef();\r\n    }\r\n\r\n    renderCalculator = () =>\r\n        <div className=\"Calculator\">\r\n            <div className={this.state.result.length < 10 ? \"result\" : \"result resultSmall\"}>{this.state.result}</div>\r\n            <div className=\"resultHelperText\">{this.getExponentText()}</div>\r\n            <FormControl className=\"expression\" ref={this.textInput} value={this.state.expression}\r\n                         onChange={this.onExpressionChanged}\r\n                         placeholder=\"\" aria-label=\"Expression\"/> <br/>\r\n            <Accordion>\r\n                <Card>\r\n                    <Accordion.Toggle className=\"accordionHeader\" as={Card.Header} eventKey=\"0\">\r\n                        Extra stuff\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            {this.renderExtraFunctions()}\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n            <div className=\"buttonContainer\">\r\n                <Button onClick={this.moveCursorLeft} variant=\"secondary\">\r\n                    {'<'}\r\n                </Button>\r\n                <Button onClick={this.moveCursorRight} variant=\"secondary\">\r\n                    {'>'}\r\n                </Button>\r\n                <Button onClick={this.clear} variant=\"secondary\">\r\n                    C\r\n                </Button>\r\n                <Button onClick={this.delete} variant=\"secondary\">\r\n                    DEL\r\n                </Button>\r\n\r\n                <Button onClick={this.bindAppend('(')} variant=\"secondary\">\r\n                    (\r\n                </Button>\r\n                <Button onClick={this.bindAppend(')')} variant=\"secondary\">\r\n                    )\r\n                </Button>\r\n                <Button onClick={this.bindAppend('^')} variant=\"secondary\">\r\n                    EXP\r\n                </Button>\r\n                <Button onClick={this.bindAppend('/')} variant=\"secondary\">\r\n                    ÷\r\n                </Button>\r\n\r\n                {this.renderButtons(7, 9)}\r\n\r\n                <Button onClick={this.bindAppend('*')} variant=\"secondary\">\r\n                    x\r\n                </Button>\r\n\r\n                {this.renderButtons(4, 6)}\r\n\r\n                <Button onClick={this.bindAppend('-')} variant=\"secondary\">\r\n                    -\r\n                </Button>\r\n\r\n                {this.renderButtons(1, 3)}\r\n\r\n                <Button onClick={this.bindAppend('+')} variant=\"secondary\">\r\n                    +\r\n                </Button>\r\n\r\n                <Button onClick={this.bindAppend('0')} variant=\"secondary\">\r\n                    0\r\n                </Button>\r\n\r\n                <Button onClick={this.bindAppend('.')} variant=\"secondary\">\r\n                    .\r\n                </Button>\r\n\r\n                <Button className=\"smallText\" onClick={this.undo} variant=\"secondary\">\r\n                    UNDO\r\n                </Button>\r\n\r\n                <Button className=\"smallText\" onClick={this.redo} variant=\"secondary\">\r\n                    REDO\r\n                </Button>\r\n\r\n            </div>\r\n        </div>;\r\n\r\n    getExponentText = () => {\r\n        let matches = this.state.result.match(/[\\n]*e([+-])\\s*([^\\n\\r]*)/);\r\n        if (matches == null)\r\n            return \"\";\r\n        return matches[0];\r\n    };\r\n\r\n    renderButtons = (start, end) => {\r\n        const output = [];\r\n        for (let i = start; i < end + 1; i++) {\r\n            output.push(<Button key={\"button_\" + i} onClick={this.bindAppend(i)} variant=\"secondary\"> {i} </Button>);\r\n        }\r\n        return output;\r\n    };\r\n\r\n    renderExtraFunctions = () => {\r\n        const output = [];\r\n        const functions = [\"abs\", \"factorial\", \"log\", \"log2\", \"log10\"];\r\n        const trigFunctions = [\"sin\", \"cos\", \"tan\", \"sec\", \"csc\", \"cot\"];\r\n        const constants = [\"pi\", \"tau\", \"e\", \"phi\", \"i\", \"deg\"];\r\n        output.push(<p key=\"functions\">Functions</p>);\r\n        for (let f of functions) {\r\n            output.push(<span className=\"defaultLink\" key={f} onClick={this.bindAppend(f + '(')}>{f} </span>);\r\n        }\r\n        output.push(<br key=\"brk1\"/>);\r\n        for (let f of trigFunctions) {\r\n            output.push(<span className=\"defaultLink\" key={f} onClick={this.bindAppend(f + '(')}>{f} </span>);\r\n            output.push(<span className=\"defaultLink\" key={f + '2'} onClick={this.bindAppend(f + 'h(')}>{f}h </span>);\r\n            output.push(<span className=\"defaultLink\" key={f + '3'}\r\n                              onClick={this.bindAppend('a' + f + '(')}>a{f} </span>);\r\n            output.push(<span className=\"defaultLink\" key={f + '4'}\r\n                              onClick={this.bindAppend('a' + f + 'h(')}>a{f}h </span>);\r\n        }\r\n        output.push(<p key=\"constants\"><br/>Constants</p>);\r\n        for (let c of constants) {\r\n            output.push(<span className=\"defaultLink\" key={c} onClick={this.bindAppend(c)}>{c} </span>);\r\n        }\r\n        return output;\r\n    };\r\n\r\n    render = () => {\r\n        return this.renderCalculator();\r\n    };\r\n\r\n    append = (str) => {\r\n        this.textInput.current.focus();\r\n        insertText(this.textInput.current, str);\r\n    };\r\n\r\n    bindAppend = (str) => {\r\n        return this.append.bind(this, str);\r\n    };\r\n\r\n    onExpressionChanged = (event) => {\r\n        let expression = event.target.value.replace(/\\s+/g, '');\r\n        this.setState({\r\n            expression: expression,\r\n            result: this.tryEnumerate(expression)\r\n        });\r\n    };\r\n\r\n    clear = () => {\r\n        this.textInput.current.focus();\r\n        this.textInput.current.selectionStart = 0;\r\n        this.textInput.current.selectionEnd = this.state.expression.length;\r\n        insertText(this.textInput.current, '');\r\n        this.textInput.current.focus();\r\n    };\r\n\r\n    delete = () => {\r\n        this.textInput.current.focus();\r\n        if (this.textInput.current.selectionEnd === this.textInput.current.selectionStart) {\r\n            this.textInput.current.selectionEnd = this.textInput.current.selectionStart;\r\n            this.textInput.current.selectionStart = this.textInput.current.selectionEnd - 1;\r\n        }\r\n        insertText(this.textInput.current, '');\r\n        this.textInput.current.focus();\r\n    };\r\n\r\n    undo = () => {\r\n        this.textInput.current.focus();\r\n        document.execCommand('undo', false, null);\r\n    };\r\n\r\n    redo = () => {\r\n        this.textInput.current.focus();\r\n        document.execCommand('redo', false, null);\r\n    };\r\n\r\n\r\n    moveCursorLeft = () => {\r\n        this.textInput.current.focus();\r\n        if (this.textInput.current.selectionStart === this.textInput.current.selectionEnd)\r\n            this.textInput.current.selectionStart -= 1;\r\n        this.textInput.current.selectionEnd = this.textInput.current.selectionStart;\r\n    };\r\n    moveCursorRight = () => {\r\n        this.textInput.current.focus();\r\n        if (this.textInput.current.selectionStart === this.textInput.current.selectionEnd)\r\n            this.textInput.current.selectionEnd += 1;\r\n        this.textInput.current.selectionStart = this.textInput.current.selectionEnd;\r\n    };\r\n\r\n    tryEnumerate(exp, iteration = 0) {\r\n        iteration++;\r\n        exp = exp.trim();\r\n        if (exp === \"\")\r\n            return \"\";\r\n        try {\r\n            let result = this.math.compile(exp).evaluate();\r\n            // Fix for weird mathjs function bug\r\n            if (typeof result === \"function\")\r\n                return \"ERROR\";\r\n\r\n            result = this.math.round(result, 10);\r\n\r\n            return result.toString();\r\n        } catch (err) {\r\n            if (iteration < 2) {\r\n                const numOpenParentheses = (exp.match(/\\(/g) || []).length;\r\n                const numClosedParentheses = (exp.match(/\\)/g) || []).length;\r\n                const parenthesesToAdd = numOpenParentheses - numClosedParentheses;\r\n                if (parenthesesToAdd > 0) {\r\n                    let parentheses = \"\";\r\n                    for (let i = 0; i < parenthesesToAdd; i++) {\r\n                        parentheses += \")\";\r\n                    }\r\n                    return this.tryEnumerate(exp + parentheses, iteration);\r\n                }\r\n            }\r\n\r\n            return \"ERROR\";\r\n        }\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport {Calculator} from \"./Calculator\";\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({testVar: \"fffffff\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Calculator/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({testVar: \"teeeeeest\"});\r\n\r\n        setTimeout(() => {\r\n            this.setState({testVar: \"another teeeeeeest\"})\r\n        }, 1000);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './App.scss';\r\n\r\n\r\nconst NotFound = () => (\r\n    <h1>404 Page Not Found :(</h1>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './App.scss';\r\n\r\n\r\nconst NavBar = () => (\r\n    <div className=\"NavBar\">\r\n        <br/>\r\n        <h1>World's Most Unnecessary Calculator App</h1>\r\n        <ul>\r\n            <li><Link to=\"/\">Home</Link></li>\r\n            <li><Link to=\"/test\">Test</Link></li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default NavBar;\r\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport './index.scss';\nimport TestPage from './TestPage';\nimport * as serviceWorker from './serviceWorker';\nimport Home from \"./Home\";\nimport NotFound from \"./NotFound\";\nimport NavBar from \"./NavBar\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst routing = (\n    <div>\n        <Router>\n            <NavBar/>\n            <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                <Route path=\"/test\" component={TestPage}/>\n                <Route component={NotFound}/>\n            </Switch>\n        </Router>\n    </div>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}